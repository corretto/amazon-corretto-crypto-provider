/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.amazon.corretto.crypto.examples

import com.amazon.corretto.crypto.provider.AmazonCorrettoCryptoProvider
import java.nio.charset.Charset
import java.security.Security
import javax.crypto.Cipher
import javax.crypto.spec.GCMParameterSpec
import javax.crypto.spec.SecretKeySpec
import kotlin.test.Test
import kotlin.test.assertEquals

fun generateData(len: Int): ByteArray {
    return ByteArray(len, Int::toByte)
}

class AesGcm {
    @Test fun aesGcmEncryptDecrypt() {
        Security.insertProviderAt(AmazonCorrettoCryptoProvider(), 1)
        val iv = generateData(12)
        val tagLen = 128
        val gcmParameterSpec = GCMParameterSpec(128, iv)
        val secretKey = SecretKeySpec(generateData(32), "AES")
        val cipher = Cipher.getInstance("AES/GCM/NoPadding")
        assertEquals("AmazonCorrettoCryptoProvider", cipher.provider.name)
        val message = "Hello World!"
        cipher.init(Cipher.ENCRYPT_MODE, secretKey, gcmParameterSpec)
        val cipherText = cipher.doFinal(message.toByteArray())

        assertEquals(message.length + (tagLen / 8), cipherText.size)

        cipher.init(Cipher.DECRYPT_MODE, secretKey, gcmParameterSpec)

        val plainText = String(cipher.doFinal(cipherText), Charset.defaultCharset())
        assertEquals(message, plainText)
    }
}
